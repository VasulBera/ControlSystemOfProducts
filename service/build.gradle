group 'ControlSystemOfProducts'
version '1.0'

apply plugin: 'java'
apply plugin: 'war'
apply plugin: 'jacoco'

ext{
    jacocoVersion = "0.7.6.201602180812"
}

repositories {
    mavenCentral()
}

dependencies {

    compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.4'

    compile group: 'org.hibernate', name: 'hibernate-entitymanager', version: '5.0.0.Final'
    compile group: 'org.hibernate', name: 'hibernate-core', version: '5.0.0.Final'
    compile group: 'org.hibernate', name: 'hibernate-validator', version: '5.1.3.Final'
    compile group: 'org.hibernate.javax.persistence', name: 'hibernate-jpa-2.1-api', version: '1.0.0.Final'
    compile group: 'com.hynnet', name: 'sqljdbc4-chs', version: '4.0.2206.100'

    compile group: 'org.springframework', name: 'spring-core', version: '4.3.0.RELEASE'
    compile group: 'org.springframework', name: 'spring-beans', version: '4.3.0.RELEASE'
    compile group: 'org.springframework', name: 'spring-context', version: '4.3.0.RELEASE'
    compile group: 'org.springframework', name: 'spring-web', version: '4.3.0.RELEASE'
    compile group: 'org.springframework', name: 'spring-orm', version: '4.3.0.RELEASE'
    compile group: 'javax.persistence', name: 'persistence-api', version: '1.0.2'

    compile group: 'org.apache.cxf', name: 'cxf-rt-frontend-jaxws', version: '3.1.6'
    compile group: 'org.apache.cxf', name: 'cxf-rt-transports-http', version: '3.1.6'
    compile group: 'org.apache.cxf', name: 'cxf-rt-transports-http-jetty', version: '3.1.6'
    compile group: 'org.apache.cxf', name: 'cxf-rt-frontend-jaxrs', version: '3.1.6'
    compile group: 'org.apache.cxf', name: 'cxf-rt-rs-service-description', version: '3.1.6'

    compile group: 'org.codehaus.jackson', name: 'jackson-jaxrs', version: '1.9.13'
}

jacoco {
    toolVersion = jacocoVersion
}

jacocoTestReport {
    reports {
        csv.enabled = true
        html.enabled = true
    }
}
task codeCoverageCheks(type: com.softserveinc.trainee.gradle.tasks.CodeCoverage)

task copy(type: Copy){
    Properties properties = new Properties();
    InputStream inputStream = new FileInputStream("tomcat.properties");
    properties.load(inputStream);
    String pathToTomcat = properties.getProperty("pathToTomcat");
    String pathToWar = file('.').toString() + "/build/libs/service-1.0.war";
        from pathToWar
        into pathToTomcat + '/webapps'
        rename ('service-1.0.war', 'service.war')
}

task startTomcat(type: Exec) {
    Properties properties = new Properties();
    InputStream inputStream = new FileInputStream("tomcat.properties")
    properties.load(inputStream);
    String path = properties.getProperty("pathToTomcat");
    workingDir = file(path + '/bin')
    commandLine = ['cmd', '/C', 'catalina.bat start']
}

task stopTomcat(type: Exec) {
    Properties properties = new Properties();
    InputStream inputStream = new FileInputStream("tomcat.properties")
    properties.load(inputStream);
    String path = properties.getProperty("pathToTomcat");
    workingDir = file(path + '/bin')
    commandLine = ['cmd', '/C', 'shutdown.bat']
}

task deleteFile(type: Delete){
    Properties properties = new Properties();
    InputStream inputStream = new FileInputStream("tomcat.properties");
    properties.load(inputStream);
    String pathToTomcat = properties.getProperty("pathToTomcat");
    delete pathToTomcat + '/webapps/service'
    delete pathToTomcat + '/webapps/service.war'
}

task createDb(type: com.softserveinc.trainee.gradle.tasks.SqlRunner)
task fillDb(type: com.softserveinc.trainee.gradle.tasks.TestDataRunner)

tasks.jacocoTestReport.dependsOn(test)
tasks.codeCoverageCheks.dependsOn(jacocoTestReport)
tasks.check.dependsOn(codeCoverageCheks)
tasks.deleteFile.dependsOn(build)
tasks.copy.dependsOn(deleteFile)
tasks.createDb.dependsOn(copy)
tasks.startTomcat.dependsOn(createDb)









