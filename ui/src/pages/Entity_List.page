<apex:page sidebar="false" controller="EntityController">
<apex:includeScript value="https://ajax.googleapis.com/ajax/libs/jquery/1.7.2/jquery.min.js" />
<apex:includeScript value="https://cdnjs.cloudflare.com/ajax/libs/jquery-validate/1.15.0/jquery.validate.js" />
<apex:includeScript value="https://ap1.salesforce.com/soap/ajax/20.0/connection.js"/>

    <style type="text/css">
       .heads{margin-top: 2%; margin-left: 25%; margin-right: 25%; display: flex; margin-bottom: 1%; }
       .title{font-size: 17px; text-align: center; margin-bottom: 20px;}
       .create-botton{width: 100%; text-align: right;}
       .entity-body{margin-left: 25%; margin-right: 25%; margin-bottom: 1%; padding: 20px; font-size: 13px;}
       .create-entity{margin-left: 25%; margin-right: 25%; margin-bottom: 1%; padding: 20px;  font-size: 13px;}
       .entity-editor{width: 100%; display: block;}
       .entity-editor-name{width: 20%; font-size: 15px; display: inline-table;}
       .entity-editor-name div{margin-bottom: 10px;}
       .entity-editor-value{width: 79%; display: inline-table;}
       body .bPageBlock .pbBody .dataCol{width: 100%;}
       .modal-main{display: flex; font-size: 14px; margin-bottom: 20px;}
       .modal-btn{height: 22px; width: 100px;}
       .innerContent{height: 55px}
    </style>
    
    <script type="text/javascript">
    
    $( document ).ready( function(){
       makeInputsDisable();
    })
    
    function makeInputsDisable(){
       var isExists = $($($('.list')[0]).find('.dataRow')[0]).find('[id$=field-type]').is(":visible");
        if(isExists){
            var lineArray = $($('.list')[0]).find('.dataRow');
            for(var i = 0; i < lineArray.length; i++){
                var typeValue = $($($('.list')[0]).find('.dataRow')[i]).find('[id$=field-type] option:selected').val();
                var lengthElement = $($($('.list')[0]).find('.dataRow')[i]).find('[id$=field-length]');
                if(typeValue == 'NVARCHAR'){
                    lengthElement.prop('disabled', false);
                }else{
                    lengthElement.val('');
                    lengthElement.prop('disabled', true);
                }
            }
        }

    }
    
       function generateSchemaName(){
        var entityNameCreated = $( ".entityNameCreate" ).val().replace(" ", "_").replaceAll(' ', '_').replaceAll(/[^a-zA-Z0-9//_]+/, '').toUpperCase();
                if(entityNameCreated  != ""){
                    if($( ".entitySchemaNameCreate" ).val() == ''){
                           $( ".entitySchemaNameCreate" ).val(entityNameCreated);
                    }
                    if($( ".entityTableNameCreate" ).val() == ''){
                        $( ".entityTableNameCreate" ).val("TABLE_" + entityNameCreated);
                    }
            }
        };
        
        function generateColumnName(element){
            var nameElement = $($(element).closest('.dataRow')).find('[id$=fieldNameCreated]');
            var NameValue = nameElement[0].value;
            var columnNameValue = document.getElementById(element.id).value;
            if(columnNameValue == '' && NameValue != ''){
                document.getElementById(element.id).value = NameValue.replaceAll(' ', '_').replaceAll(/[^a-zA-Z0-9//_]+/, '').toUpperCase(); 
            }

        };
        
        function makeButtondisable(element){
            var value = element.value;
            var lengthElement = $($(element).closest('.dataRow')).find('[id$=field-length]');
            if(value == 'NVARCHAR'){
                lengthElement.prop('disabled', false);
            }else{
                lengthElement.val('');
                lengthElement.prop('disabled', true);
            }
        }

        function replaceWhitespace(element){
            element.value = element.value.replaceAll(' ', '_');
        }
        
        String.prototype.replaceAll = function(search, replace){
          return this.split(search).join(replace);
        }
        
        
        function openModal(){ 
          var box = new SimpleDialog("hersh"+Math.random(), true); 
          parent.box = box;
          box.setTitle("DELETE ENTITY"); 
          box.createDialog(); 
          box.setWidth(350); 
          box.setContentInnerHTML(
              "<div class='modal-main'><div style='margin-right: 5px;'>Do you want delete entity </div>" + 
              "<h1 id='entity-name-modal'></h1></div>" + 
              "<div class='btns'><button class='btn modal-btn' onclick='window.parent.box.hide(); return false;' style='float: left;' >Cancel</button>" + 
              "<button class='modal-btn' onclick='deleteEntity()' style='float: right;'>Delete</button> </div>");
          box.setupDefaultButtons();
          box.show(); 
}
        function deleteEntity(){
            deleteEntity();
        } 
        var message = 'Do you want delete entity ';
        function setEntityName(name){
            var changed = message +' "' + name + '"?';
            $('.modal-main').text(changed);
        }
        
        function getEntityName(){
            
        }

    </script>
    
    
    <div class="heads">
          <div class="title"></div>
         <div class="create-botton"><apex:form ><apex:commandButton action="{!show}" value="Create Entity" reRender="fullPage" id="CreateEntityButton" style="width: 100px; margin-right:20px;"/></apex:form></div>
    </div>
  <apex:outputPanel id="fullPage" >
      
      <apex:outputPanel id="create" rendered="{!showSection}" >
         <apex:form id="createEntity" styleClass="createEntityForm">
                    <div class="create-entity">
                            <div class="title" style="margin-left: 18px;">Create Entity</div>
                        <div class="entity-editor">
                                 <apex:pageBlock >
                                     <apex:pageMessages id="msg" escape="false"></apex:pageMessages> 
                                    <apex:pageBlockSection >
                                        <apex:pageBlockSectionItem > 
                                            <apex:outputPanel id="createdEntity"> 
                                                <div class="entity-editor-name">
                                                    <div>Entity name:</div>
                                                    <div>Schema name:</div>
                                                    <div>Table name:</div>
                                                </div>
                                                <div class="entity-editor-value">
                                                   <div style="margin-bottom: 8px;"><apex:inputField value="{!createdEntity.Name__c}" styleClass="entityNameCreate" id="entity-name" onchange="replaceWhitespace(this), generateSchemaName()"/></div>
                                                   <div style="margin-bottom: 8px;"><apex:inputField value="{!createdEntity.Schema_Name__c}" onclick="" styleClass="entitySchemaNameCreate" id="entity-schema-name" onchange="replaceWhitespace(this)"/></div>
                                                   <div style="margin-bottom: 0px;"><apex:inputField value="{!createdEntity.Table_Name__c}" styleClass="entityTableNameCreate" id="entity-table-name" onchange="replaceWhitespace(this)"/></div>
                                                </div>
                                            </apex:outputPanel>
                                         </apex:pageBlockSectionItem>
                                    </apex:pageBlockSection>
                                </apex:pageBlock>
                        </div>
                        <apex:outputPanel id="fieldTable">
                        <apex:pageBlock title="Fields">
                             <apex:pageBlockButtons location="top">
                                <apex:actionStatus id="afterPressCreateButton" onstop="makeInputsDisable()"/>
                                <apex:commandButton action="{!createField}" value="Create" onclick="makeInputsDisable()" reRender="fieldTable" style="margin-left: 85%; width: 70px;" immediate="true" status="afterPressCreateButton"/>
                            </apex:pageBlockButtons>
                                <apex:pageBlockTable value="{!createdFields}" var="f">
                          
                             <apex:column headerValue="Action">
                                  <apex:commandLink value="Delete" action="{!deleteField}" reRender="fieldTable" style="font-weight: bold; color: #006699" immediate="true">
                                       <apex:param name="fieldId" value="{!f.Id__c}" assignTo="{!fieldId}"/> 
                                  </apex:commandLink>
                             </apex:column>
                          
                             <apex:column headerValue="Field name">
                                <apex:inputField value="{!f.Name__c}" id="fieldNameCreated" onchange="replaceWhitespace(this)"/>
                             </apex:column>

                             <apex:column headerValue="Column name">
                                <apex:inputField value="{!f.Column_Name__c}" id="fieldColumnNameCreated" onclick="generateColumnName(this)" onchange="replaceWhitespace(this)"/>
                             </apex:column>
                             
                             <apex:column headerValue="Field type" id="field-type">
                                <apex:inputField value="{!f.Field_Type__c}" onchange="makeButtondisable(this)"/>
                             </apex:column>
                             
                             <apex:column headerValue="Length">
                                <apex:inputField value="{!f.Length__c}" id="field-length"/>
                             </apex:column>
                             
                          </apex:pageBlockTable>

                         </apex:pageBlock>
                         </apex:outputPanel>
                        <apex:commandButton action="{!saveEntity}" value="Save" style="width: 70px; margin-right: 20px"/>
                        <apex:commandButton action="{!cancelSavingEntity}" value="Cancel" reRender="createEntity" style="width: 70px; margin-right: 20px" styleClass="cancel" immediate="true"/>
                    </div>
         </apex:form>   
    </apex:outputPanel>
      
      
      
      
      
    <div class="entity-body">
        <div class="title">Entity List</div>
        <apex:form >
        <apex:actionFunction action="{!deleteEntity}" name="deleteEntity">
        </apex:actionFunction> 
            <apex:pageBlock title="Entity" id="entityTable">
            <apex:pageBlockTable value="{!entities}" var="entity">
                <apex:column headerValue="Action">
                    <!-- <apex:commandLink action="{!deleteEntity}" value="Delete" style="font-weight: bold; color: #006699" reRender="entityTable" onclick="openModal()">
                        <apex:param name="entityId" value="{!entity.id}" assignTo="{!entityId}"/>
                    </apex:commandlink> -->   
                   <apex:actionStatus id="openDialogWindow" onstop="openModal(), setEntityName('{!entity.name}')"/>
                   <apex:commandLink value="Delete" style="font-weight: bold; color: #006699" reRender="entityTable" status="openDialogWindow" >
                        <apex:param name="entityName" value="{!entity.id}" assignTo="{!entityId}"/>
                    </apex:commandlink>
                    
                </apex:column>
                <apex:column headerValue="Name">
                    <apex:commandLink action="{!getEntityEditPage}" value="{!entity.name}" style="font-weight: bold; color: #006699">
                        <apex:param name="entityId" value="{!entity.Id}" assignTo="{!entityId}"/>
                    </apex:commandlink>
                </apex:column>
                <apex:column headerValue="Schema name">{!entity.schemaName}</apex:column>
                <apex:column headerValue="Table name">{!entity.tableName}</apex:column>
            </apex:pageBlockTable>
            </apex:pageBlock>
        </apex:form>
    </div>
  </apex:outputPanel>
</apex:page>