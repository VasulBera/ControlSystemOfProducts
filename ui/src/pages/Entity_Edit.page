<apex:page sidebar="false" controller="EditEntityController"> <!-- showHeader="false" sidebar="false" -->
<apex:includeScript value="https://ajax.googleapis.com/ajax/libs/jquery/1.7.2/jquery.min.js" />
<apex:includeScript value="https://cdnjs.cloudflare.com/ajax/libs/jquery-validate/1.15.0/jquery.validate.js" />
<apex:includeScript value="https://ap1.salesforce.com/soap/ajax/20.0/connection.js"/>

  <style type="text/css">
       .main{min-width: 1860px;}
       .zen{min-width: 1880px;} 
       .heads{margin-top: 2%; margin-left: 10%; margin-right: 10%; display: flex; margin-bottom: 1%;}
       .title{font-size: 17px; text-align: center; width: 100%;}
       .body{margin-left: 10%; margin-right: 10%; margin-bottom: 1%; padding: 20px;}
       .entity-editor{width: 100%; display: flex;}
       .entity-editor-name{width: 30%; font-size: 15px; display: inline-table;}
       .entity-editor-name div{margin-bottom: 10px;}
       .entity-editor-value{width: 50%; display: inline-table;}
       .field-editor{margin-top:20px; width: 100%;font-size: 13px;}
       body .bPageBlock .pbBody .dataCol{width: 100%;}
       body .pbBody table.list tr.headerRow th { width: 170px;}
       .modal-main{display: flex; font-size: 14px; margin-bottom: 20px;}
       .modal-btn{height: 22px; width: 100px;}
       .innerContent{height: 55px}
       .apexp{width: 100%;}

    </style>
    
    <script>

        $( document ).ready( function(){
            makeInputsDisable();
            deleteLongName();
            
            var elements = $('[id$=fieldTable]').find('.dataRow');
            $(elements).change(function(){
                deleteLongName();
            });
        })
                               
         function deleteLongName(){
           var elements = $('[id$=fieldTable]').find('.dataRow');
           for(var i = 0; i < elements.length; i++){
               var columns = $(elements[i]).find('.dataCell');
               var primaryKey = $(columns[columns.length-1]).find('span');
               var fieldName = $(columns[1]).find('span span span');
               var columnName = $(columns[2]).find('span span span');
               var fieldNameValue = fieldName.text();
               var columnNameValue = columnName.text();
               var primaryKeyValue = primaryKey.text();
               if(primaryKeyValue.length > 30){
                   primaryKey.text(replaceValue(primaryKeyValue));
               }
               if(fieldNameValue.length > 30){
                   fieldName.text(replaceValue(fieldNameValue));
               }
               if(columnNameValue.length > 30){
                   columnName.text(replaceValue(columnNameValue));
               }
           }  
         }   
        
        function replaceValue(value){
            return value.substring(0, 27) + '...';
        }
        
         function makeInputsDisable(){
           var isExists = $($($('.list')[0]).find('.dataRow')[0]).find('[id$=field-type]').is(":visible");
            if(isExists){
                var lineArray = $($('.list')[0]).find('.dataRow');
                for(var i = 0; i < lineArray.length; i++){
                    var typeValue = $($($('.list')[0]).find('.dataRow')[i]).find('[id$=field-type] option:selected').val();
                    var lengthElement = $($($('.list')[0]).find('.dataRow')[i]).find('[id$=field-length]');
                    if(typeValue == 'NVARCHAR'){
                        lengthElement.prop('disabled', false);
                    }else{
                    lengthElement.val('');
                    lengthElement.prop('disabled', true);
                    }
                }
            }
    
        }
        
        function makeButtondisable(element){
            var value = element.value;
            var lengthElement = $($(element).closest('.dataRow')).find('[id$=field-length]');
            if(value == 'NVARCHAR'){
                lengthElement.prop('disabled', false);
            }else{
                lengthElement.val('');
                lengthElement.prop('disabled', true);
            }
        }
                    
        function replaceWhitespace(element){
            element.value = element.value.replaceAll(' ', '_');
        }
        
        String.prototype.replaceAll = function(search, replace){
          return this.split(search).join(replace);
        }
        
        function openModal(){ 
          var box = new SimpleDialog("hersh"+Math.random(), true); 
          parent.box = box;
          box.setTitle("DELETE FIELD"); 
          box.createDialog(); 
          box.setWidth(350); 
          box.setContentInnerHTML(
              "<div class='modal-main'><div style='margin-right: 5px;'>Do you want delete field </div>" + 
              "<h1 id='field-name-modal'></h1></div>" + 
              "<div class='btns'><button class='btn modal-btn' onclick='window.parent.box.hide(); return false;' style='float: left;' >Cancel</button>" + 
              "<button class='btn modal-btn' onclick='deleteEntity()' style='float: right;'>Delete</button> </div>");
          box.setupDefaultButtons();
          box.show(); 
}
        function deleteEntity(){
            deleteField();
        } 
        var fieldName;
        var message = 'Do you want delete field ';
        function setFiledName(name){
        if(name.length > 12){
            name = name.substring(0, 9) + '...';
        }
        var changed = message +' "' + name + '"?';
        $('.modal-main').text(changed);
        }
        
        function reset(){
            console.log('reset');
        }
    
    </script>
    <div class='main'>
    <div class="heads">
         <div class="title">Entity Edit</div>
    </div>
    <div style='display: flex;'>
    <apex:form ><apex:commandButton action="{!createTable}" value="Create Table" style="width: 100px; height:23px; font-size:12px; margin-left: 208px;"/></apex:form>
    <apex:form ><apex:commandButton action="{!show}" value="Create Request" reRender="requestPanel" style="width: 100px; height:23px; font-size:12px; margin-left: 10px;"/></apex:form>
    </div>
    <apex:outputPanel id="requestPanel">
        <apex:outputPanel rendered="{!showSection}">
            <apex:form >
                <div style="display: table-caption; margin-left: 206px; margin-top: 20px;">
                Name:
                <apex:inputTextarea value="{!owner}" title="owner"/>
                Description:
                <apex:inputTextarea value="{!description}" title="owner"/>
                <apex:commandButton value="Save" action="{!createRequestTask}"/>
                </div>
            </apex:form>
        </apex:outputPanel>
    </apex:outputPanel>
    <apex:form >
        <div class="body">
            <div class="entity-editor">
                                 <apex:pageBlock id="entityData">
                                    <apex:pageBlockSection >
                                        <apex:pageBlockSectionItem > 
                                            <apex:outputPanel id="createdEntity"> 
                                                <div class="entity-editor-name"> <!-- entity-editor-name -->
                                                    <div>Entity name:</div>
                                                    <div>Schema name:</div>
                                                    <div>Table name:</div>
                                                </div>
                                                <div class="entity-editor-value"> <!-- entity-editor-value -->
                                                    <div style="margin-bottom: 8px;"><apex:inputField value="{!entity.Name__c}" styleClass="entityNameCreate" id="entity-name" required="true" onchange="replaceWhitespace(this)"/></div>
                                                    <div style="margin-bottom: 8px;"><apex:inputField value="{!entity.Schema_Name__c}" onclick="proba()" styleClass="entitySchemaNameCreate" id="entity-schema-name" onchange="replaceWhitespace(this)"/></div>
                                                    <div style="margin-bottom: 0px;"><apex:inputField value="{!entity.Table_Name__c}" styleClass="entityTableNameCreate" id="entity-table-name" onchange="replaceWhitespace(this)"/></div>
                                                </div>
                                            </apex:outputPanel>
                                         </apex:pageBlockSectionItem>
                                    </apex:pageBlockSection>
                                </apex:pageBlock>
                        </div>
                        
            <div class="field-editor">
                <apex:pageBlock title="Fields" id="fieldTable">
                <apex:actionFunction action="{!deleteField}" name="deleteField"/>
                <apex:actionStatus id="afterPressAllButton" onstop="makeInputsDisable(), deleteLongName()"/>
                <apex:pageMessages id="showmsg" escape="false"></apex:pageMessages> 
                <apex:pageBlockButtons style="display: flex;" location="top">
                    <apex:commandButton action="{!createField}" value="Add" reRender="fieldTable" style="margin-left: 92%; width: 70px;" status="afterPressAllButton" onclick=""/>
                </apex:pageBlockButtons>
                  <apex:pageBlockTable value="{!fields}" var="item">
                      <apex:column headerValue="Action">
                          <!-- <apex:commandLink value="Delete" action="{!deleteField}" reRender="fieldTable" status="afterPressAllButton" style="font-weight: bold; color: #006699">
                               <apex:param name="fieldId" value="{!item.Id__c}" assignTo="{!fieldId}"/>
                          </apex:commandLink> -->
                          <apex:actionStatus id="openDialogWindow" onstop="openModal(), setFiledName('{!item.Name__c}'), deleteLongName()"/>
                           <apex:commandLink value="Delete" reRender="fieldTable" status="openDialogWindow" style="font-weight: bold; color: #006699">
                               <apex:actionSupport status="afterPressAllButton" event="onclick" reRender="fake"/>
                               <apex:param name="fieldId" value="{!item.Id__c}" assignTo="{!fieldId}"/>
                          </apex:commandLink>
                      </apex:column>
                    <apex:column headerValue="Field name">
                        <apex:outputField value="{!item.Name__c}" >
                           <apex:inlineEditSupport event="onclick" showOnEdit="update"/>
                        </apex:outputField>
                    </apex:column>
                    
                    <apex:column headerValue="Column name">
                        <apex:outputField value="{!item.Column_Name__c}">
                           <apex:inlineEditSupport event="onclick" showOnEdit="update"/>
                        </apex:outputField>
                    </apex:column>
                    
                    <apex:column headerValue="Field type">
                        <apex:inputField value="{!item.Field_Type__c}" id="field-type" onchange="makeButtondisable(this)"/>
                    </apex:column>
                    
                    <apex:column headerValue="Length">
                        <apex:inputField value="{!item.Length__c}" id="field-length"/>
                    </apex:column>
                     
                     <apex:column headerValue="PK">
                         <apex:outputField value="{!entity.Name__c}"/>
                     </apex:column>
                 </apex:pageBlockTable>
               </apex:pageBlock>
               <apex:commandButton action="{!save}" value="Save" status="afterPressAllButton" style="width: 70px; margin-right: 20px"/>
               <apex:commandButton action="{!cancle}" value="Cancel" status="afterPressAllButton" reRender="fieldTable, entityData" style="width: 70px; margin-right: 20px" immediate="true"/>
            </div>
        </div>
    </apex:form>
    </div>
</apex:page>